# Default values for css.
# This is a YAML-formatted file.

### Declare what css config to use
# Default to using the default bundled config.
config:
  ### Config options are: default, file, dynamic (more to be added)
  bundled: default
  # One can declare a configmap name from which a custom JSON-LD config can be loaded into css
  configMapName: ""
  configMapKey: ""

### Log level: debug, info, warn, error
logLevel: info
### Enables detailed logging on error pages.
showStacktrace: false

### From the helm config, an appropriate --baseUrl value will be passed to the community server
### If however you wish to override this set this parameter appropriately.
baseUrlOverride: ""

persistence:
  enabled: false
  storageClassName: ""
  requestSize: 512Mi

replicaCount: 1

image:
  repository: jveessen/css
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: ClusterIP
  port: 80
  nodePort: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
  host: chart-example.local
  path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

nodeSelector: {}

tolerations: []

affinity: {}
